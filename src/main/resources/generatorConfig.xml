<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<!-- mybatis逆向工程-->
<generatorConfiguration>

    <!--导入数据库属性配置文件-->
    <properties resource="db.properties"/>

    <!--数据库驱动jar包所在位置-->
    <classPathEntry location="${jdbc.mysql.driverLocation}"/>

    <!--targetRuntime:转换机制：
        MybatisSimple:生成简单的CRUD
        Mybatis3:生成可简单可复杂的CRUD
     -->
    <context id="DB2Tables" targetRuntime="MyBatis3">

        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true" />
        </commentGenerator>

        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
                NUMERIC 类型解析为java.math.BigDecimal -->
        <jdbcConnection driverClass="${jdbc.mysql.driverClass}"
                        connectionURL="${jdbc.mysql.url}"
                        userId="${jdbc.mysql.username}"
                        password="${jdbc.mysql.password}">
        </jdbcConnection>

        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
           targetPackage     指定生成的model生成所在的包名
           targetProject     指定在该项目下所在的路径
       -->
        <javaTypeResolver >
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <javaModelGenerator targetPackage="com.yjl.crud.bean" targetProject=".\src\main\java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="true"/>
            <!-- 是否对model添加 构造函数 -->
           <!-- <property name="constructorBased" value="true"/>-->
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
         <!--   <property name="immutable" value="false"/>-->
        </javaModelGenerator>

        <!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
        <sqlMapGenerator targetPackage="mapper" targetProject=".\src\main\resources">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.yjl.crud.dao" targetProject=".\src\main\java">
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>

        <!-- 指定数据库表 -->
        <table tableName="tbl_emp" domainObjectName="Employee"/>
<!--               enableCountByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" enableUpdateByExample="false"/>-->
        <table tableName="tbl_dept" domainObjectName="Department"/>
              <!-- enableCountByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" enableUpdateByExample="false"/>-->
        <!-- 有些表的字段需要指定java类型
        <table schema="" tableName="">
        <columnOverride column="" javaType="" />
        </table> -->

    </context>
</generatorConfiguration>